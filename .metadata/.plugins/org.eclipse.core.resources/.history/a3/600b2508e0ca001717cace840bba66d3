package pkg_dao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Collection;
import java.util.List;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.jdbc.core.support.JdbcDaoSupport;

import pkg_po.UserPO;
import pkg_bizlogic.Authentication;

@SuppressWarnings("all")
public class UserDao extends JdbcDaoSupport {
	
	private static final Log logger = LogFactory.getLog(UserDao.class);
	private Authentication auth;
	public void setAuth(Authentication auth) {
		this.auth = auth;
	}

	// 此方法把USEMBO表对应的字段查询出来依次放入userPO中
	public Collection<UserPO> doquery() {
		String sql = "SELECT * FROM user_tb";
		logger.info(sql);
//		return super.getJdbcTemplate().query(sql, new RowMapper() {
//
//			public Object mapRow(ResultSet rs, int num) throws SQLException {
//				UserPO user = new UserPO();
//				user.setUserId(rs.getInt("employee_id"));
//				user.setUserName(rs.getString("employee_name"));
//				user.setUserAge(rs.getInt("birthday"));
//				logger.debug(user);
//				System.out.println(user);
//				return user;
//			}
//		});
		return getJdbcTemplate().query(sql,new ItemRowMapper());
	}
	
	protected class ItemRowMapper implements RowMapper { //这个类也可以定义在方法里如 RowMapper rowMapper = new RowMapper(){}
		public Object mapRow(ResultSet rs, int rowNum) throws SQLException { 
			UserPO user = new UserPO();
			user.setEmployeeId(rs.getInt("employee_id"));
			user.setEmployeeName(rs.getString("employee_name"));
			user.setEmployeePWD(rs.getString("employee_pwd"));
			user.setGender(rs.getString("gender"));
			user.setPhone(rs.getString("phone"));
			user.setBirthday(rs.getString("birthday"));
			user.setDepartment(rs.getString("department"));
			user.setEmail(rs.getString("Email"));
			user.setAddress(rs.getString("address"));
			user.setLever(rs.getString("lever"));
			return user;
		} 
		}
}
